{
	"info": {
		"_postman_id": "a8bb802b-a7f0-4062-88e5-d360e6bcde72",
		"name": "Minimal API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create new to-do item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test('Schema is valid', function () {",
							"    // Verify shape of returned data",
							"    const jsonData = pm.response.json();",
							"",
							"    pm.expect(tv4.validate(jsonData, Schemas.TodoItem)).to.be.true;",
							"",
							"    // Save ID of created to-do item",
							"    pm.collectionVariables.set(\"itemId\", jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"itemName\", pm.variables.replaceIn('{{$randomCatchPhrase}} - {{$randomPassword}}'));",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{itemName}}\",\n    \"isComplete\": true\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{APIURL}}/todoitems",
					"host": [
						"{{APIURL}}"
					],
					"path": [
						"todoitems"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all to-do items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Schema is valid', function () {",
							"    // Verify shape of returned data",
							"    const jsonData = pm.response.json();",
							"    pm.expect(tv4.validate(jsonData, Schemas.TodoItems)).to.be.true;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{APIURL}}/todoitems",
					"host": [
						"{{APIURL}}"
					],
					"path": [
						"todoitems"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all completed to-do items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Schema is valid', function () {",
							"    // Verify shape of returned data",
							"    const jsonData = pm.response.json();",
							"    pm.expect(tv4.validate(jsonData, Schemas.TodoItems)).to.be.true;",
							"});",
							"",
							"pm.test(\"Items are marked complete\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(item => pm.expect(item.isComplete).to.be.true);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{APIURL}}/todoitems/complete",
					"host": [
						"{{APIURL}}"
					],
					"path": [
						"todoitems",
						"complete"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an item by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Schema is valid', function () {",
							"    // Verify shape of returned data",
							"    const jsonData = pm.response.json();",
							"    pm.expect(tv4.validate(jsonData, Schemas.TodoItem)).to.be.true;",
							"});",
							"",
							"pm.test('Data is correct', function () {",
							"    // Verify data",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('itemId'));",
							"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get('itemName'));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{APIURL}}/todoitems/{{itemId}}",
					"host": [
						"{{APIURL}}"
					],
					"path": [
						"todoitems",
						"{{itemId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get unknown item (404)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{APIURL}}/todoitems/{{$randomInt}}",
					"host": [
						"{{APIURL}}"
					],
					"path": [
						"todoitems",
						"{{$randomInt}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Modify to-do item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"feed fish\",\n    \"isComplete\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{APIURL}}/todoitems/{{itemId}}",
					"host": [
						"{{APIURL}}"
					],
					"path": [
						"todoitems",
						"{{itemId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Modify unknown item (404)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"feed fish\",\n    \"isComplete\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{APIURL}}/todoitems/{{$randomInt}}",
					"host": [
						"{{APIURL}}"
					],
					"path": [
						"todoitems",
						"{{$randomInt}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get modified item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Item was updated\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"feed fish\");",
							"    pm.expect(jsonData.isComplete).to.be.false;",
							"});",
							"",
							"pm.test('Schema is valid', function () {",
							"    // Verify shape of returned data",
							"    const jsonData = pm.response.json();",
							"    pm.expect(tv4.validate(jsonData, Schemas.TodoItem)).to.be.true;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{APIURL}}/todoitems/{{itemId}}",
					"host": [
						"{{APIURL}}"
					],
					"path": [
						"todoitems",
						"{{itemId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete to-do item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{APIURL}}/todoitems/{{itemId}}",
					"host": [
						"{{APIURL}}"
					],
					"path": [
						"todoitems",
						"{{itemId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get deleted item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{APIURL}}/todoitems/{{itemId}}",
					"host": [
						"{{APIURL}}"
					],
					"path": [
						"todoitems",
						"{{itemId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete unknown item (404)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{APIURL}}/todoitems/{{$randomInt}}",
					"host": [
						"{{APIURL}}"
					],
					"path": [
						"todoitems",
						"{{$randomInt}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "HEAD request for testing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "HEAD",
				"header": [],
				"url": {
					"raw": "{{APIURL}}",
					"host": [
						"{{APIURL}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"Schemas = {",
					"    TodoItem: {",
					"        \"type\": \"object\",",
					"        \"properties\": {",
					"            \"id\": { \"type\": \"integer\" },",
					"            \"name\": { \"type\": \"string\" },",
					"            \"isComplete\": { \"type\": \"boolean\" }",
					"        },",
					"        \"required\": [\"id\", \"name\", \"isComplete\"],",
					"        \"additionalProperties\": false",
					"    },",
					"    TodoItems: {",
					"        \"type\": \"array\",",
					"        \"items\": {",
					"            \"type\": \"object\",",
					"            \"properties\": {",
					"                \"id\": { \"type\": \"integer\" },",
					"                \"name\": { \"type\": \"string\" },",
					"                \"isComplete\": { \"type\": \"boolean\" }",
					"            },",
					"            \"required\": [\"id\", \"name\", \"isComplete\"],",
					"            \"additionalProperties\": false",
					"        }",
					"    }",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "APIURL",
			"value": "http://localhost:5000",
			"type": "default"
		},
		{
			"key": "itemId",
			"value": ""
		},
		{
			"key": "itemName",
			"value": ""
		}
	]
}